# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2019-08-31 15:40
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('customers', '0002_auto_20190831_2110'),
        ('products', '0001_initial'),
        ('distributors', '0001_initial'),
        ('vendors', '0001_initial'),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollectAmount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('date', models.DateField()),
                ('collect_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('remaining_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_collectamount_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_collectamount_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-auto_id',),
                'db_table': 'collect_amount',
                'verbose_name': 'collect_amount',
                'verbose_name_plural': 'collect_amounts',
            },
        ),
        migrations.CreateModel(
            name='CustomerPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('date', models.DateField()),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('remaining_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_customerpayment_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_customerpayment_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-auto_id',),
                'db_table': 'payment_amount',
                'verbose_name': 'payment_amount',
                'verbose_name_plural': 'payment_amounts',
            },
        ),
        migrations.CreateModel(
            name='DamagedProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_returned', models.BooleanField(default=False)),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='sales/damaged-items/', verbose_name='Image')),
                ('distributor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='distributors.Distributor')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Measurement')),
            ],
            options={
                'db_table': 'damaged_product',
                'verbose_name': 'damaged product',
                'verbose_name_plural': 'damaged products',
            },
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('sale_type', models.CharField(choices=[('retail', 'Retail'), ('wholesale', 'Wholesale')], default='retail', max_length=128)),
                ('time', models.DateTimeField()),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('special_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_received', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('round_off', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('collected_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_remainder_date', models.DateField(blank=True, null=True)),
                ('gst_type', models.CharField(choices=[('sgst', 'SGST'), ('igst', 'IGST')], default='sgst', max_length=128)),
                ('old_debit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('old_credit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_estimate_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_estimate_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-auto_id',),
                'db_table': 'sales_estimate',
                'verbose_name': 'estimate',
                'verbose_name_plural': 'estimates',
            },
        ),
        migrations.CreateModel(
            name='EstimateItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_added_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('return_qty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.Estimate')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Measurement')),
            ],
            options={
                'ordering': ('product',),
                'db_table': 'sales_estimate_item',
                'verbose_name': 'estimate item',
                'verbose_name_plural': 'estimate items',
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_paymenthistory_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sales_payment_history',
                'verbose_name': 'sales payment history',
                'verbose_name_plural': 'sales payment histories',
            },
        ),
        migrations.CreateModel(
            name='ProductReturn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('time', models.DateTimeField(blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_productreturn_objects', to=settings.AUTH_USER_MODEL)),
                ('distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='distributors.Distributor')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_productreturn_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-auto_id',),
                'db_table': 'product_return',
                'verbose_name': 'product return',
                'verbose_name_plural': 'product returns',
            },
        ),
        migrations.CreateModel(
            name='ProductReturnItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.DamagedProduct')),
                ('product_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.ProductReturn')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Measurement')),
            ],
            options={
                'db_table': 'product_return_item',
                'verbose_name': 'product return item',
                'verbose_name_plural': 'product return items',
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('time', models.DateTimeField()),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_created', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_purchaserequest_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_purchaserequest_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-auto_id',),
                'db_table': 'sales_purchase_request',
                'verbose_name': 'purchase_request',
                'verbose_name_plural': 'purchase_requests',
            },
        ),
        migrations.CreateModel(
            name='PurchaseRequestItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('return_qty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('return_item', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('purchase_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.PurchaseRequest')),
            ],
            options={
                'ordering': ('product',),
                'db_table': 'sales_purchase_request_item',
                'verbose_name': 'purchase_request item',
                'verbose_name_plural': 'purchase_request items',
            },
        ),
        migrations.CreateModel(
            name='ReturnableProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_returned', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_returnableproduct_objects', to=settings.AUTH_USER_MODEL)),
                ('damaged_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sales.DamagedProduct')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
            ],
            options={
                'db_table': 'returnable_product',
                'verbose_name': 'returnable product',
                'verbose_name_plural': 'returnable products',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('sale_type', models.CharField(choices=[('retail', 'Retail'), ('wholesale', 'Wholesale')], default='retail', max_length=128)),
                ('invoice_id', models.CharField(max_length=128)),
                ('time', models.DateTimeField()),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('special_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_received', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('round_off', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('collected_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_remainder_date', models.DateField(blank=True, null=True)),
                ('gst_type', models.CharField(choices=[('sgst', 'SGST'), ('igst', 'IGST')], default='sgst', max_length=128)),
                ('old_debit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('old_credit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('amount_from_debit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('return_item_total', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('return_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('customer_gstin_invoice_id', models.PositiveIntegerField(blank=True, null=True)),
                ('customer_non_gstn_invoice_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('orginal', 'Orginal'), ('edited', 'Edited'), ('deleted', 'Deleted')], default='orginal', max_length=128)),
                ('no_of_boxes', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('return_boxes', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_sale_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
                ('distributor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='distributors.Distributor')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_sale_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-time',),
                'db_table': 'sales_sale',
                'verbose_name': 'sale',
                'verbose_name_plural': 'sales',
            },
        ),
        migrations.CreateModel(
            name='SaleCollectAmountHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('collect_amount', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sales.CollectAmount')),
                ('paid_from_sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paid_from_salecollectamounthistory_objects', to='sales.Sale')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.Sale')),
            ],
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_added_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('return_qty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('return_item', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('batch_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Batch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.Sale')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.Measurement')),
            ],
            options={
                'ordering': ('product',),
                'db_table': 'sales_sale_item',
                'verbose_name': 'sale item',
                'verbose_name_plural': 'sale items',
            },
        ),
        migrations.CreateModel(
            name='SaleReturn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('time', models.DateTimeField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('commission_deducted', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('returnable_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_from_sale', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_salereturn_objects', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customers.Customer')),
                ('distributor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='distributors.Distributor')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.Sale')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_salereturn_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-auto_id',),
                'db_table': 'sale_return',
                'verbose_name': 'sale return',
                'verbose_name_plural': 'sale returns',
            },
        ),
        migrations.CreateModel(
            name='SaleReturnItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cost', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to='sales/return-items/', verbose_name='Image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('sale_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.SaleReturn')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Measurement')),
            ],
            options={
                'db_table': 'sale_return_item',
                'verbose_name': 'sale return item',
                'verbose_name_plural': 'sale return items',
            },
        ),
        migrations.CreateModel(
            name='VendorProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_returned', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Measurement')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Vendor')),
            ],
            options={
                'db_table': 'vender_product',
                'verbose_name': 'vendor product',
                'verbose_name_plural': 'vendor products',
            },
        ),
        migrations.CreateModel(
            name='VendorReturn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('a_id', models.PositiveIntegerField(db_index=True)),
                ('time', models.DateTimeField()),
                ('is_deleted', models.BooleanField(default=False)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_vendorreturn_objects', to=settings.AUTH_USER_MODEL)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('updator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_vendorreturn_objects', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.Vendor')),
            ],
            options={
                'ordering': ('-auto_id',),
                'db_table': 'sales_vendor_return',
                'verbose_name': 'vendor return',
                'verbose_name_plural': 'vendor returns',
            },
        ),
        migrations.CreateModel(
            name='VendorReturnItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cost', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_deleted', models.BooleanField(default=False)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.VendorProduct')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Measurement')),
                ('vendor_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sales.VendorReturn')),
            ],
            options={
                'db_table': 'sales_vendor_return_item',
                'verbose_name': 'vendor return item',
                'verbose_name_plural': 'vendor return items',
            },
        ),
        migrations.AddField(
            model_name='returnableproduct',
            name='sale_return',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sales.SaleReturn'),
        ),
        migrations.AddField(
            model_name='returnableproduct',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop'),
        ),
        migrations.AddField(
            model_name='returnableproduct',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Measurement'),
        ),
        migrations.AddField(
            model_name='returnableproduct',
            name='updator',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_returnableproduct_objects', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paymenthistory',
            name='payment_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_from', to='sales.Sale'),
        ),
        migrations.AddField(
            model_name='paymenthistory',
            name='payment_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_to', to='sales.Sale'),
        ),
        migrations.AddField(
            model_name='paymenthistory',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Shop'),
        ),
        migrations.AddField(
            model_name='paymenthistory',
            name='updator',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='updator_paymenthistory_objects', to=settings.AUTH_USER_MODEL),
        ),
    ]
